service: appsync
package:
  individually: true

plugins:
  - serverless-appsync-plugin
  - serverless-pseudo-parameters
  
custom:
  accountTable: account-${self:custom.stage}

  stage: ${opt:stage, self:provider.stage}
  appSync:
    name: "appsync"
    authenticationType: API_KEY

    mappingTemplates:
      - type: Query
        dataSource:  ThtDynamodbAccountTable
        field: getAccount
        request: "getAccount-request.vtl"
        response: "getAccount-response.vtl"

      - type: Query 
        dataSource:  ThtDynamodbAccountTable
        field: allAccounts
        request: "allAccounts-request.vtl"
        response: "allAccounts-response.vtl"

      - type: Mutation 
        dataSource:  ThtDynamodbAccountTable
        field: addAccount
        request: "addAccount-request.vtl"
        response: "addAccount-response.vtl"

      - type: Mutation 
        dataSource:  ThtDynamodbAccountTable
        field: updateAccount
        request: "updateAccount-request.vtl"
        response: "updateAccount-response.vtl"

      - type: Mutation 
        dataSource:  ThtDynamodbAccountTable
        field: deleteAccount
        request: "deleteAccount-request.vtl"
        response: "deleteAccount-response.vtl"

    serviceRole: "AppSyncServiceRole"
    dataSources:
      - type: AMAZON_DYNAMODB
        name: ThtDynamodbAccountTable
        description: ThtDynamodbAccountTable
        config:
          tableName: ${self:custom.accountTable}
          serviceRoleArn: { Fn::GetAtt: [AppSyncDynamodbServiceRole, Arn] } 


provider:
  name: aws
  stage: dev
  region:  us-east-1
  profile: cloud_user

resources:
  Resources:
    AppSyncDynamodbServiceRole:
      Type: "AWS::IAM::Role"
      Properties:
        RoleName: "${self:custom.appSync.name}-Dynamodb-${self:custom.appSync.serviceRole}-${self:custom.stage}"
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Principal:
                Service:
                  - "appsync.amazonaws.com"
              Action:
                - "sts:AssumeRole"
        Policies:
          - PolicyName: "${self:custom.appSync.name}-Dynamodb-${self:custom.appSync.serviceRole}-Policy-${self:custom.stage}"
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: "Allow"
                  Action:
                    - "dynamodb:GetItem"
                    - "dynamodb:Scan"
                    - "dynamodb:Query"
                    - "dynamodb:PutItem"
                    - "dynamodb:UpdateItem"
                    - "dynamodb:DeleteItem"
                  Resource:
                    - "arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/${self:custom.accountTable}"
                    - "arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/${self:custom.accountTable}/*"
                
