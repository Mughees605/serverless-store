service: appsync
package:
  individually: true

plugins:
  - serverless-appsync-plugin
  - serverless-pseudo-parameters
  
custom:
  accountTable: account-${self:custom.stage}
  reviewTable: review-${self:custom.stage}
  favoriteTable: favorite-${self:custom.stage}


  stage: ${opt:stage, self:provider.stage}
  appSync:
    name: "appsync"
    authenticationType: API_KEY

    mappingTemplates:
      - type: Query
        dataSource:  ThtDynamodbAccountTable
        field: getAccount
        request: "getAccount-request.vtl"
        response: "shared-response.vtl"
      - type: Query 
        dataSource:  ThtDynamodbAccountTable
        field: allAccounts
        request: "allAccounts-request.vtl"
        response: "shared-response.vtl"

      - type: Query 
        dataSource:  ThtDynamodbReviewTable
        field: getReview
        request: "getReview-request.vtl"
        response: "shared-response.vtl"
      - type: Query 
        dataSource:  ThtDynamodbReviewTable
        field: listReviews
        request: "listReviews-request.vtl"
        response: "shared-response.vtl"

      - type: Query 
        dataSource:  ThtDynamodbReviewTable
        field: getFavorite
        request: "getFavorite-request.vtl"
        response: "shared-response.vtl"
      - type: Query 
        dataSource:  ThtDynamodbReviewTable
        field: listFavorites
        request: "listFavorites-request.vtl"
        response: "shared-response.vtl"
      - type: Query 
        dataSource:  ThtDynamodbStoreTable
        field: getStore
        request: "getStore-request.vtl"
        response: "shared-response.vtl"
      - type: Query 
        dataSource:  ThtDynamodbStoreTable
        field: listStores
        request: "listStore-request.vtl"
        response: "shared-response.vtl"
      - type: Query 
        dataSource:  ThtDynamodbItemTable
        field: getItem
        request: "getItem-request.vtl"
        response: "getItem-response.vtl"
      - type: Query 
        dataSource:  ThtDynamodbItemTable
        field: listItems
        request: "listItem-request.vtl"
        response: "shared-response.vtl"
      - type: Store 
        dataSource:  ThtDynamodbItemTable
        field: items
        request: "Store.items-request.vtl"
        response: "shared-response.vtl"

      - type: Mutation 
        dataSource:  ThtDynamodbAccountTable
        field: addAccount
        request: "addAccount-request.vtl"
        response: "shared-response.vtl"
      - type: Mutation 
        dataSource:  ThtDynamodbAccountTable
        field: updateAccount
        request: "updateAccount-request.vtl"
        response: "shared-response.vtl"
      - type: Mutation 
        dataSource:  ThtDynamodbAccountTable
        field: deleteAccount
        request: "deleteAccount-request.vtl"
        response: "shared-response.vtl"

      - type: Mutation 
        dataSource:  ThtDynamodbReviewTable
        field: createReview
        request: "createReview-request.vtl"
        response: "shared-response.vtl"
      - type: Mutation 
        dataSource:  ThtDynamodbReviewTable
        field: updateReview
        request: "updateReview-request.vtl"
        response: "shared-response.vtl"
      - type: Mutation 
        dataSource:  ThtDynamodbReviewTable
        field: deleteReview
        request: "deleteReview-request.vtl"
        response: "shared-response.vtl"

      - type: Mutation 
        dataSource:  ThtDynamodbFavoriteTableTable
        field: createFavorite
        request: "createFavorite-request.vtl"
        response: "shared-response.vtl"
      - type: Mutation 
        dataSource:  ThtDynamodbFavoriteTableTable
        field: updateFavorite
        request: "updateFavorite-request.vtl"
        response: "shared-response.vtl"
      - type: Mutation 
        dataSource:  ThtDynamodbFavoriteTableTable
        field: deleteFavorite
        request: "deleteFavorite-request.vtl"
        response: "shared-response.vtl"
      - type: Mutation 
        dataSource:  ThtDynamodbStoreTable
        field: createStore
        request: "addStore-request.vtl"
        response: "shared-response.vtl"
      - type: Mutation 
        dataSource:  ThtDynamodbStoreTable
        field: updateStore
        request: "updateStore-request.vtl"
        response: "shared-response.vtl"
      - type: Mutation 
        dataSource:  ThtDynamodbStoreTable
        field: deleteStore
        request: "deleteStore-request.vtl"
        response: "shared-response.vtl"
      - type: Mutation 
        dataSource:  ThtDynamodbStoreTable
        field: createItem
        request: "createItem-request.vtl"
        response: "shared-response.vtl"
      - type: Mutation 
        dataSource:  ThtDynamodbStoreTable
        field: updateItem
        request: "updateItem-request.vtl"
        response: "shared-response.vtl"
      - type: Mutation 
        dataSource:  ThtDynamodbStoreTable
        field:   deleteItem
        request: "deleteItem-request.vtl"
        response: "shared-response.vtl"
    serviceRole: "AppSyncServiceRole"
    dataSources:
      - type: AMAZON_DYNAMODB
        name: ThtDynamodbAccountTable
        description: ThtDynamodbAccountTable
        config:
          tableName: ${self:custom.accountTable}
          serviceRoleArn: { Fn::GetAtt: [AppSyncDynamodbServiceRole, Arn] } 
      - type: AMAZON_DYNAMODB
        name: ThtDynamodbReviewTable
        description: ThtDynamodbReviewTable
        config:
          tableName: ${self:custom.reviewTable}
          serviceRoleArn: { Fn::GetAtt: [AppSyncDynamodbServiceRole, Arn] } 
      - type: AMAZON_DYNAMODB
        name: ThtDynamodbFavoriteTableTable
        description: ThtDynamodbFavoriteTableTable
        config:
          tableName: ${self:custom.favoriteTable}
          serviceRoleArn: { Fn::GetAtt: [AppSyncDynamodbServiceRole, Arn] } 


provider:

  name: aws
  stage: dev
  region:  us-east-1
  profile: store_user

resources:
  Resources:
    AppSyncDynamodbServiceRole:
      Type: "AWS::IAM::Role"
      Properties:
        RoleName: "${self:custom.appSync.name}-Dynamodb-${self:custom.appSync.serviceRole}-${self:custom.stage}"
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Principal:
                Service:
                  - "appsync.amazonaws.com"
              Action:
                - "sts:AssumeRole"
        Policies:
          - PolicyName: "${self:custom.appSync.name}-Dynamodb-${self:custom.appSync.serviceRole}-Policy-${self:custom.stage}"
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: "Allow"
                  Action:
                    - "dynamodb:GetItem"
                    - "dynamodb:Scan"
                    - "dynamodb:Query"
                    - "dynamodb:PutItem"
                    - "dynamodb:UpdateItem"
                    - "dynamodb:DeleteItem"
                  Resource:
                    - "arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/${self:custom.accountTable}"
                    - "arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/${self:custom.accountTable}/*"
                    - "arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/${self:custom.reviewTable}"
                    - "arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/${self:custom.reviewTable}/*"
                    - "arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/${self:custom.favoriteTable}"
                    - "arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/${self:custom.favoriteTable}/*"
                
